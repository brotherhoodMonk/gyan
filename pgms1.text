// toWeirdCase( "String" );//=> returns "StRiNg"
// toWeirdCase( "Weird string case" );//=> returns "WeIrD StRiNg CaSe"

function toWeirdCase(string){
  string = string.split(" ");
  let test = '';
  for(let i = 0; i < string.length; i++) {
    for(let j = 0; j < string[i].length; j++) {
       if(j % 2 == 0) {
         test +=  string[i].charAt(j).toUpperCase();
       } else {
         test +=  string[i].charAt(j).toLowerCase();
       }
    }
    if(i !== string.length - 1) { test += ' '; }
  }
  return test;
}
-------------
function toWeirdCase(string){
  return string.split(' ').map(function(word){
    return word.split('').map(function(letter, index){
      return index % 2 == 0 ? letter.toUpperCase() : letter.toLowerCase()
    }).join('');
  }).join(' ');
}
=========
describe("Fixed tests", function(){
  it("It should pass fixed tests", function(){
    Test.assertEquals(songDecoder("AWUBBWUBC"), "A B C","WUB should be replaced by 1 space");
    Test.assertEquals(songDecoder("AWUBWUBWUBBWUBWUBWUBC"), "A B C","multiples WUB should be replaced by only 1 space");
    Test.assertEquals(songDecoder("WUBAWUBBWUBCWUB"), "A B C","heading or trailing spaces should be removed");
  });
});

function songDecoder(song){
let str = '';
for(let i = 0; i < song.length; i ++) {
  if((song.charAt(i) === 'W' && song.charAt(i + 1) === 'U' && song.charAt(i + 2) === 'B') || ((song.charAt(i) === 'U' && song.charAt(i - 1) === 'W' && song.charAt(i + 1) === 'B') || ((song.charAt(i) === 'B' && song.charAt(i - 2) === 'W' && song.charAt(i - 1) === 'U')))) {
    console.log('hey')
  } else {
  if(i === song.length - 1) {
    str += song.charAt(i)
  } else {
  str += song.charAt(i);
}

  }
}
console.log('9999999', str.split("").join(' ', ' '));
return str.split("").join(' ', ' ');
  // ...
  ----
}
find the duplicates
const c = [];
a.forEach((i) => {
  if(b.indexOf(i) !== -1 && c.indexOf(i) === -1) {
    c.push(i);
  }
});
