creating singletone class

In case youâ€™re unfamiliar with the singleton pattern, it is, at its core,
a design pattern that restricts the instantiation of a class to one object

A singleton should be immutable by the consuming code, and there should be no danger
 of instantiating more than one of them.

class UserStore {
  constructor(){
    this._data = [];
  }

  add(item){
    this._data.push(item);
  }

  get(id){
    return this._data.find(d => d.id === id);
  }
}

const instance = new UserStore();
Object.freeze(instance);

export default instance;
--
const _data = [];

const UserStore = {
  add: item => _data.push(item),
  get: id => _data.find(d => d.id === id)
}

Object.freeze(UserStore);
export default UserStore;
========
